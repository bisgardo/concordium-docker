apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fullname" . }}
  labels: {{ include "labels" . | fromYaml | toJson }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ include "selectorLabels" . | fromYaml | toJson }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations: {{ toJson . }}
      {{- end }}
      labels: {{ include "selectorLabels" . | fromYaml | toJson }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toJson . }}
      {{- end }}
      securityContext: {{ toJson .Values.podSecurityContext }}
      containers:
      - name: node
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
        - /concordium-node
        - --data-dir=/mnt/data
        - --config-dir=/mnt/config
        - --bootstrap-node=bootstrap.mainnet.concordium.software:8888
        - --rpc-server-addr=0.0.0.0
        - --prometheus-server
        - --prometheus-listen-addr=0.0.0.0
        - --no-dnssec
        ports:
        - name: p2p
          containerPort: 8888
        - name: rpc
          containerPort: 10000
        - name: metrics
          containerPort: 9090
        resources: {{ toJson .Values.resources }}
        securityContext: {{ toJson .Values.securityContext }}
        volumeMounts:
        - name: config
          mountPath: /mnt/config
        - name: data
          mountPath: /mnt/data
      {{- if .Values.nodeName }}
      - name: collector
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command:
        - /node-collector
        - --collector-url=http://dashboard.mainnet.concordium.software/nodes/post
        - --grpc-host=http://localhost:10000
        - --node-name={{ .Values.nodeName }}
      {{- end }}
      initContainers:
      - name: init-genesis
        image: "{{ .Values.genesisImage.repository }}:{{ .Values.genesisImage.tag }}"
        env:
        - name: DATA_DIR
          value: /mnt/data
        volumeMounts:
        - name: data
          mountPath: /mnt/data
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ toJson . }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity: {{ toJson . }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ toJson . }}
      {{- end }}
      volumes:
      - name: config
        emptyDir: {}
      # TODO use proper storage and add a secret with any baker credentials
      #      (could also contain 'genesis.dat' which would eliminate the need for the init container)
      - name: data
        emptyDir: {}
