version: '3'
services:
  genesis:
    container_name: node-init-genesis
    image: ${GENESIS_IMAGE}
    environment:
    - DATA_DIR=/data
    network_mode: none
    volumes:
    - data:/data
    build:
      context: genesis
      args:
        genesis_file: ${GENESIS_VERSION}.dat
  oob_catchup:
    container_name: node-init-catchup
    image: busybox:stable
    environment:
    - DATA_DIR=/data
    volumes:
    - data:/data
    # Download OOB catchup blob and move it to the expected location in the data volume once done
    # (this signals to the 'node' container that it may start).
    entrypoint: |
      /bin/sh -c '
        set -eu
        rm -f "$${DATA_DIR}/import.mdb"
        wget https://catchup.mainnet.concordium.software/blocks_to_import.mdb -O /tmp/import.mdb
        mv /tmp/import.mdb "$${DATA_DIR}/import.mdb"
      '
  node:
    container_name: node
    image: ${NODE_IMAGE}
    # Wait for the "init" containers 'node-init-genesis' and 'node-init-catchup' to complete
    # by detecting that the files they provide have been created.
    # This may be replaced with 'depends_on' conditions, but that was only implemented in a recent,
    # not yet widely adopted (nor properly documented; see 'https://github.com/docker/docker.github.io/issues/12633')
    # version of Docker Compose.
    entrypoint: |
      /bin/sh -c '
        set -eu
        sleep 1 # ensure that the 'node-init-catchup' has had time to delete any old import file
        until [ -f "$${CONCORDIUM_NODE_DATA_DIR}/genesis.dat" ] && [ -f "$${CONCORDIUM_NODE_DATA_DIR}/import.mdb" ]; do
          sleep 1
        done
        /concordium-node
      '
    environment:
    - CONCORDIUM_NODE_DATA_DIR=/data
    - CONCORDIUM_NODE_CONFIG_DIR=/config
    - CONCORDIUM_NODE_CONNECTION_BOOTSTRAP_NODES=bootstrap.mainnet.concordium.software:8888
    - CONCORDIUM_NODE_RPC_SERVER_ADDR=0.0.0.0
    - CONCORDIUM_NODE_PROMETHEUS_SERVER=1
    - CONCORDIUM_NODE_PROMETHEUS_LISTEN_ADDRESSS=0.0.0.0
    - CONCORDIUM_NODE_CONSENSUS_IMPORT_BLOCKS_FROM=/data/import.mdb
    depends_on:
    - genesis
    - oob_catchup
    networks:
    - concordium
    ports:
    - 8888:8888
    - 10000:10000
    volumes:
    - data:/data
    - config:/config
    build:
      context: .
      args:
        tag: ${NODE_TAG}
  node-collector:
    container_name: node-collector
    image: ${NODE_IMAGE}
    entrypoint: /node-collector
    environment:
    - CONCORDIUM_NODE_COLLECTOR_URL=http://dashboard.mainnet.concordium.software/nodes/post
    - CONCORDIUM_NODE_COLLECTOR_GRPC_HOST=http://node:10000
    - CONCORDIUM_NODE_COLLECTOR_NODE_NAME=${NODE_NAME}
    depends_on:
    - node
    networks:
    - concordium
  node-dashboard-grpc-proxy:
    container_name: node-dashboard-grpc-proxy
    image: envoyproxy/envoy:v1.18-latest
    command: /usr/local/bin/envoy --config-path /etc/envoy/envoy.yaml
    depends_on:
    - node
    networks:
    - concordium
    ports:
    - "9901:9901" # admin
    - "9999:9999" # proxy
    volumes:
    - ./node-dashboard/envoy.yaml:/etc/envoy/envoy.yaml:ro
  node-dashboard:
    container_name: node-dashboard
    image: ${NODE_DASHBOARD_IMAGE}
    depends_on:
    - node-dashboard-grpc-proxy
    networks:
    - concordium
    ports:
    - "8099:80"
    build:
      context: ./node-dashboard
      args:
        tag: main
volumes:
  data:
  config:
networks:
  concordium:
